{"ast":null,"code":"var _jsxFileName = \"/Users/sattarovas/Desktop/for fun/tic-tac-toe/src/components/GameField/GameField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useMemo, useState, useEffect } from \"react\";\n// import {RxCross1} from \"@react-icons/all-files/rx/RxCross1\";\n// import { BsCircle } from \"@react-icons/all-files/bs/BsCircle\";\n\nimport { SquareFilling } from \"../../types/square\";\nimport { determineEndOfGame } from \"../../helpers/determineEndOfGame\";\nimport './GameField.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameField = () => {\n  _s();\n  const [squares, setSquaresState] = useState([null, null, null, null, null, null, null, null, null]);\n  const [isGameOver, setGameState] = useState(false);\n  const [winnerZeroOrCross, setWinner] = useState(undefined);\n  useEffect(() => {\n    const {\n      isEnd,\n      winner\n    } = determineEndOfGame(squares);\n    setGameState(isEnd);\n    setWinner(winner);\n  }, [squares, setGameState, setWinner]);\n  const putCrossByPlayer = newPmo;\n  const onSquareClick = useCallback((state, idx) => {\n    const whereToPutZeroIdx = () => {\n      return squares.findIndex(item => item === null);\n    };\n    if (!state) {\n      const newState = squares.slice();\n      newState.splice(idx, 1, SquareFilling.Cross);\n      newState.splice(whereToPutZeroIdx(), 1, SquareFilling.Zero);\n      setSquaresState(newState);\n    }\n  }, [setSquaresState, squares]);\n  const field = useMemo(() => {\n    return squares.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        state: item,\n        onClick: () => {\n          onSquareClick(item, idx);\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    });\n  }, [squares, onSquareClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-field\",\n      children: field\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), isGameOver && winnerZeroOrCross && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"\\u041F\\u043E\\u0431\\u0435\\u0434\\u0438\\u0442\\u0435\\u043B\\u044C: \", mapFillingToWord.get(winnerZeroOrCross)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n};\n_s(GameField, \"rW1U11ayqt4EidJpsVsKiQig/Lc=\");\n_c = GameField;\nexport const Square = ({\n  state,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-field__square\",\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-field__square-content\",\n      children: mapFillingToWord.get(state)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n};\n_c2 = Square;\nexport const mapFillingToWord = new Map([[SquareFilling.Cross, \"Крестики\"], [SquareFilling.Zero, \"Нолики\"], [null, \"\"]]);\nvar _c, _c2;\n$RefreshReg$(_c, \"GameField\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["React","useCallback","useMemo","useState","useEffect","SquareFilling","determineEndOfGame","jsxDEV","_jsxDEV","GameField","_s","squares","setSquaresState","isGameOver","setGameState","winnerZeroOrCross","setWinner","undefined","isEnd","winner","putCrossByPlayer","newPmo","onSquareClick","state","idx","whereToPutZeroIdx","findIndex","item","newState","slice","splice","Cross","Zero","field","map","Square","onClick","fileName","_jsxFileName","lineNumber","columnNumber","children","className","mapFillingToWord","get","_c","_c2","Map","$RefreshReg$"],"sources":["/Users/sattarovas/Desktop/for fun/tic-tac-toe/src/components/GameField/GameField.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useState, useEffect } from \"react\"\n// import {RxCross1} from \"@react-icons/all-files/rx/RxCross1\";\n// import { BsCircle } from \"@react-icons/all-files/bs/BsCircle\";\n\nimport { SquareFilling, SquareState } from \"../../types/square\";\nimport { determineEndOfGame } from \"../../helpers/determineEndOfGame\";\n\nimport './GameField.css'\n\nexport const GameField = () => {\n    const [squares, setSquaresState] = useState<SquareState[]>([\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n    ]);\n\n    const [isGameOver, setGameState] = useState<boolean>(false)\n    const [winnerZeroOrCross, setWinner] = useState<SquareState | undefined>(undefined);\n\n    useEffect(() => {\n      const { isEnd, winner } = determineEndOfGame(squares);\n      setGameState(isEnd);\n      setWinner(winner);\n    }, [squares, setGameState, setWinner]);\n\n    const putCrossByPlayer = newPmo\n\n    const onSquareClick = useCallback(\n      (state: SquareState, idx: number) => {\n        const whereToPutZeroIdx = () => {\n            return squares.findIndex((item) => item === null);\n        };\n\n        if (!state) {\n          const newState = squares.slice();\n          newState.splice(idx, 1, SquareFilling.Cross);\n          newState.splice(whereToPutZeroIdx(), 1, SquareFilling.Zero);\n          setSquaresState(newState);\n        }\n      },\n      [setSquaresState, squares]\n    );\n\n    const field = useMemo(() => {\n        return squares.map((item, idx) => {\n            return (\n                <Square\n                key={idx}\n                state={item}\n                onClick={() => {\n                    onSquareClick(item, idx);\n                }}\n                />\n            );\n        });\n    }, [squares, onSquareClick]);\n\n\n    return (\n      <div>\n        <div className=\"game-field\">{field}</div>\n        {isGameOver && winnerZeroOrCross && (\n          <span>Победитель: {mapFillingToWord.get(winnerZeroOrCross)}</span>\n        )}\n      </div>\n    );\n}\n\n\nexport const Square = ({state, onClick}: {state: SquareState, onClick: () => void}) => {\n\n    return (\n      <div className={\"game-field__square\"} onClick={onClick}>\n        <div className={\"game-field__square-content\"}>{mapFillingToWord.get(state)}</div>\n      </div>\n    );\n}\n\nexport const mapFillingToWord = new Map<SquareFilling | null, string>([\n  [SquareFilling.Cross, \"Крестики\"],\n  [SquareFilling.Zero, \"Нолики\"],\n  [null, \"\"],\n]);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACxE;AACA;;AAEA,SAASC,aAAa,QAAqB,oBAAoB;AAC/D,SAASC,kBAAkB,QAAQ,kCAAkC;AAErE,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAgB,CACvD,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACP,CAAC;EAEF,MAAM,CAACU,UAAU,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EAC3D,MAAM,CAACY,iBAAiB,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAA0Bc,SAAS,CAAC;EAEnFb,SAAS,CAAC,MAAM;IACd,MAAM;MAAEc,KAAK;MAAEC;IAAO,CAAC,GAAGb,kBAAkB,CAACK,OAAO,CAAC;IACrDG,YAAY,CAACI,KAAK,CAAC;IACnBF,SAAS,CAACG,MAAM,CAAC;EACnB,CAAC,EAAE,CAACR,OAAO,EAAEG,YAAY,EAAEE,SAAS,CAAC,CAAC;EAEtC,MAAMI,gBAAgB,GAAGC,MAAM;EAE/B,MAAMC,aAAa,GAAGrB,WAAW,CAC/B,CAACsB,KAAkB,EAAEC,GAAW,KAAK;IACnC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;MAC5B,OAAOd,OAAO,CAACe,SAAS,CAAEC,IAAI,IAAKA,IAAI,KAAK,IAAI,CAAC;IACrD,CAAC;IAED,IAAI,CAACJ,KAAK,EAAE;MACV,MAAMK,QAAQ,GAAGjB,OAAO,CAACkB,KAAK,CAAC,CAAC;MAChCD,QAAQ,CAACE,MAAM,CAACN,GAAG,EAAE,CAAC,EAAEnB,aAAa,CAAC0B,KAAK,CAAC;MAC5CH,QAAQ,CAACE,MAAM,CAACL,iBAAiB,CAAC,CAAC,EAAE,CAAC,EAAEpB,aAAa,CAAC2B,IAAI,CAAC;MAC3DpB,eAAe,CAACgB,QAAQ,CAAC;IAC3B;EACF,CAAC,EACD,CAAChB,eAAe,EAAED,OAAO,CAC3B,CAAC;EAED,MAAMsB,KAAK,GAAG/B,OAAO,CAAC,MAAM;IACxB,OAAOS,OAAO,CAACuB,GAAG,CAAC,CAACP,IAAI,EAAEH,GAAG,KAAK;MAC9B,oBACIhB,OAAA,CAAC2B,MAAM;QAEPZ,KAAK,EAAEI,IAAK;QACZS,OAAO,EAAEA,CAAA,KAAM;UACXd,aAAa,CAACK,IAAI,EAAEH,GAAG,CAAC;QAC5B;MAAE,GAJGA,GAAG;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CAAC;IAEV,CAAC,CAAC;EACN,CAAC,EAAE,CAAC7B,OAAO,EAAEW,aAAa,CAAC,CAAC;EAG5B,oBACEd,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAKkC,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAER;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACxC3B,UAAU,IAAIE,iBAAiB,iBAC9BP,OAAA;MAAAiC,QAAA,GAAM,gEAAY,EAACE,gBAAgB,CAACC,GAAG,CAAC7B,iBAAiB,CAAC;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAClE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEZ,CAAC;AAAA9B,EAAA,CA/DYD,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AAkEtB,OAAO,MAAM0B,MAAM,GAAGA,CAAC;EAACZ,KAAK;EAAEa;AAAkD,CAAC,KAAK;EAEnF,oBACE5B,OAAA;IAAKkC,SAAS,EAAE,oBAAqB;IAACN,OAAO,EAAEA,OAAQ;IAAAK,QAAA,eACrDjC,OAAA;MAAKkC,SAAS,EAAE,4BAA6B;MAAAD,QAAA,EAAEE,gBAAgB,CAACC,GAAG,CAACrB,KAAK;IAAC;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEZ,CAAC;AAAAM,GAAA,GAPYX,MAAM;AASnB,OAAO,MAAMQ,gBAAgB,GAAG,IAAII,GAAG,CAA+B,CACpE,CAAC1C,aAAa,CAAC0B,KAAK,EAAE,UAAU,CAAC,EACjC,CAAC1B,aAAa,CAAC2B,IAAI,EAAE,QAAQ,CAAC,EAC9B,CAAC,IAAI,EAAE,EAAE,CAAC,CACX,CAAC;AAAC,IAAAa,EAAA,EAAAC,GAAA;AAAAE,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAF,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}