{"ast":null,"code":"var _jsxFileName = \"/Users/sattarovas/Desktop/for fun/tic-tac-toe/src/components/GameField/GameField.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useMemo, useState, useEffect } from \"react\";\n// import {RxCross1} from \"@react-icons/all-files/rx/RxCross1\";\n// import { BsCircle } from \"@react-icons/all-files/bs/BsCircle\";\n\nimport { SquareFilling, SquareState } from \"../../types/square\";\nimport { determineEndOfGame } from \"../../helpers/determineEndOfGame\";\nimport './GameField.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GameField = () => {\n  _s();\n  const [squares, setSquaresState] = useState([null, null, null, null, null, null, null, null, null]);\n  const [isGameOver, setGameState] = useState(false);\n  const [winnerZeroOrCross, setWinner] = useState(SquareState);\n  useEffect(() => {\n    const {\n      isEnd,\n      winner\n    } = determineEndOfGame(squares);\n  }, []);\n  const findAndFillEmptySquare = useCallback(() => {\n    const idx = squares.findLastIndex(item => item === null);\n    const newState = squares.slice();\n    newState.splice(idx, 1, SquareFilling.Zero);\n    setSquaresState(newState);\n  }, [squares, setSquaresState]);\n  const onSquareClick = useCallback((state, idx) => {\n    if (!state) {\n      const newState = squares.slice();\n      newState.splice(idx, 1, SquareFilling.Cross);\n      console.log(\"newState\", newState);\n      setSquaresState(newState);\n      //findAndFillEmptySquare();\n    }\n  }, [setSquaresState, findAndFillEmptySquare]);\n  const field = useMemo(() => {\n    return squares.map((item, idx) => {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        state: item,\n        onClick: () => {\n          onSquareClick(item, idx);\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    });\n  }, [squares, setSquaresState, onSquareClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-field\",\n    children: field\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 12\n  }, this);\n};\n_s(GameField, \"OGfVPpJyPEVbVflePX6CEO6kF5k=\");\n_c = GameField;\nexport const Square = ({\n  state,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-field__square\",\n    onClick: onClick,\n    children: [\"hey\", state === SquareFilling.Cross && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-field__square-content\",\n      children: \"\\u043A\\u0440\\u0435\\u0441\\u0442\\u0438\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }, this), state === SquareFilling.Zero && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-field__square-content\",\n      children: \"\\u043D\\u043E\\u043B\\u0438\\u043A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 42\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n};\n_c2 = Square;\nvar _c, _c2;\n$RefreshReg$(_c, \"GameField\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["React","useCallback","useMemo","useState","useEffect","SquareFilling","SquareState","determineEndOfGame","jsxDEV","_jsxDEV","GameField","_s","squares","setSquaresState","isGameOver","setGameState","winnerZeroOrCross","setWinner","isEnd","winner","findAndFillEmptySquare","idx","findLastIndex","item","newState","slice","splice","Zero","onSquareClick","state","Cross","console","log","field","map","Square","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","_c2","$RefreshReg$"],"sources":["/Users/sattarovas/Desktop/for fun/tic-tac-toe/src/components/GameField/GameField.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useState, useEffect } from \"react\"\n// import {RxCross1} from \"@react-icons/all-files/rx/RxCross1\";\n// import { BsCircle } from \"@react-icons/all-files/bs/BsCircle\";\n\nimport { SquareFilling, SquareState } from \"../../types/square\";\nimport { determineEndOfGame } from \"../../helpers/determineEndOfGame\";\n\nimport './GameField.css'\n\nexport const GameField = () => {\n    const [squares, setSquaresState] = useState<SquareState[]>([\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n    ]);\n\n    const [isGameOver, setGameState] = useState<boolean>(false)\n    const [winnerZeroOrCross, setWinner] = useState<boolean>(SquareState);\n\n    useEffect(() => {\n        const {isEnd, winner} = determineEndOfGame(squares);\n    }, [])\n\n    const findAndFillEmptySquare = useCallback(() => {\n        const idx = squares.findLastIndex((item) => item === null);\n        const newState = squares.slice();\n        newState.splice(idx, 1, SquareFilling.Zero);\n        setSquaresState(newState);\n    }, [squares, setSquaresState]);\n\n    const onSquareClick = useCallback(\n      (state: SquareState, idx: number) => {\n        if (!state) {\n            const newState = squares.slice();\n            newState.splice(idx, 1, SquareFilling.Cross);\n            console.log(\"newState\", newState);\n            setSquaresState(newState);\n            //findAndFillEmptySquare();\n        }\n      },\n      [setSquaresState, findAndFillEmptySquare]\n    );\n\n    const field = useMemo(() => {\n        return squares.map((item, idx) => {\n            return (\n                <Square\n                key={idx}\n                state={item}\n                onClick={() => {\n                    onSquareClick(item, idx);\n                }}\n                />\n            );\n        });\n    }, [squares, setSquaresState, onSquareClick]);\n\n\n    return <div className=\"game-field\">{field}</div>;\n}\n\n\nexport const Square = ({state, onClick}: {state: SquareState, onClick: () => void}) => {\n\n    return (\n      <div className={\"game-field__square\"} onClick={onClick}>\n        hey\n        {state === SquareFilling.Cross && (\n          <div className={\"game-field__square-content\"}>крестик</div>\n        )}\n        {state === SquareFilling.Zero && <div className={\"game-field__square-content\"}>нолик</div>}\n      </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACxE;AACA;;AAEA,SAASC,aAAa,EAAEC,WAAW,QAAQ,oBAAoB;AAC/D,SAASC,kBAAkB,QAAQ,kCAAkC;AAErE,OAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAgB,CACvD,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,CACP,CAAC;EAEF,MAAM,CAACW,UAAU,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EAC3D,MAAM,CAACa,iBAAiB,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAUG,WAAW,CAAC;EAErEF,SAAS,CAAC,MAAM;IACZ,MAAM;MAACc,KAAK;MAAEC;IAAM,CAAC,GAAGZ,kBAAkB,CAACK,OAAO,CAAC;EACvD,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,sBAAsB,GAAGnB,WAAW,CAAC,MAAM;IAC7C,MAAMoB,GAAG,GAAGT,OAAO,CAACU,aAAa,CAAEC,IAAI,IAAKA,IAAI,KAAK,IAAI,CAAC;IAC1D,MAAMC,QAAQ,GAAGZ,OAAO,CAACa,KAAK,CAAC,CAAC;IAChCD,QAAQ,CAACE,MAAM,CAACL,GAAG,EAAE,CAAC,EAAEhB,aAAa,CAACsB,IAAI,CAAC;IAC3Cd,eAAe,CAACW,QAAQ,CAAC;EAC7B,CAAC,EAAE,CAACZ,OAAO,EAAEC,eAAe,CAAC,CAAC;EAE9B,MAAMe,aAAa,GAAG3B,WAAW,CAC/B,CAAC4B,KAAkB,EAAER,GAAW,KAAK;IACnC,IAAI,CAACQ,KAAK,EAAE;MACR,MAAML,QAAQ,GAAGZ,OAAO,CAACa,KAAK,CAAC,CAAC;MAChCD,QAAQ,CAACE,MAAM,CAACL,GAAG,EAAE,CAAC,EAAEhB,aAAa,CAACyB,KAAK,CAAC;MAC5CC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAER,QAAQ,CAAC;MACjCX,eAAe,CAACW,QAAQ,CAAC;MACzB;IACJ;EACF,CAAC,EACD,CAACX,eAAe,EAAEO,sBAAsB,CAC1C,CAAC;EAED,MAAMa,KAAK,GAAG/B,OAAO,CAAC,MAAM;IACxB,OAAOU,OAAO,CAACsB,GAAG,CAAC,CAACX,IAAI,EAAEF,GAAG,KAAK;MAC9B,oBACIZ,OAAA,CAAC0B,MAAM;QAEPN,KAAK,EAAEN,IAAK;QACZa,OAAO,EAAEA,CAAA,KAAM;UACXR,aAAa,CAACL,IAAI,EAAEF,GAAG,CAAC;QAC5B;MAAE,GAJGA,GAAG;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKP,CAAC;IAEV,CAAC,CAAC;EACN,CAAC,EAAE,CAAC5B,OAAO,EAAEC,eAAe,EAAEe,aAAa,CAAC,CAAC;EAG7C,oBAAOnB,OAAA;IAAKgC,SAAS,EAAC,YAAY;IAAAC,QAAA,EAAET;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpD,CAAC;AAAA7B,EAAA,CAxDYD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AA2DtB,OAAO,MAAMyB,MAAM,GAAGA,CAAC;EAACN,KAAK;EAAEO;AAAkD,CAAC,KAAK;EAEnF,oBACE3B,OAAA;IAAKgC,SAAS,EAAE,oBAAqB;IAACL,OAAO,EAAEA,OAAQ;IAAAM,QAAA,GAAC,KAEtD,EAACb,KAAK,KAAKxB,aAAa,CAACyB,KAAK,iBAC5BrB,OAAA;MAAKgC,SAAS,EAAE,4BAA6B;MAAAC,QAAA,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAC3D,EACAX,KAAK,KAAKxB,aAAa,CAACsB,IAAI,iBAAIlB,OAAA;MAAKgC,SAAS,EAAE,4BAA6B;MAAAC,QAAA,EAAC;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvF,CAAC;AAEZ,CAAC;AAAAI,GAAA,GAXYT,MAAM;AAAA,IAAAQ,EAAA,EAAAC,GAAA;AAAAC,YAAA,CAAAF,EAAA;AAAAE,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}