{"ast":null,"code":"export const determineEndOfGame = squares => {\n  for (const combination of endOfGameCombinations) {\n    const first = squares[combination[0]];\n    const second = squares[combination[1]];\n    const third = squares[combination[2]];\n    const notEmpty = first && second && third;\n    const areTheSame = first === second && second === third;\n    if (notEmpty && areTheSame) {\n      return {\n        isEnd: true,\n        winner: first\n      };\n    }\n  }\n  return {\n    isEnd: false\n  };\n};\nconst endOfGameCombinations = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 4, 8], [0, 4, 8], [2, 4, 6]];","map":{"version":3,"names":["determineEndOfGame","squares","combination","endOfGameCombinations","first","second","third","notEmpty","areTheSame","isEnd","winner"],"sources":["/Users/sattarovas/Desktop/for fun/tic-tac-toe/src/helpers/determineEndOfGame.ts"],"sourcesContent":["import { SquareState } from \"../types/square\";\n\nexport const determineEndOfGame = (squares: SquareState[]) => {\n    for (const combination of endOfGameCombinations) {\n        const first = squares[combination[0]]\n        const second = squares[combination[1]]\n        const third = squares[combination[2]]\n\n        const notEmpty = first && second && third\n        const areTheSame = first === second && second === third\n\n        if (notEmpty && areTheSame) {\n            return { isEnd: true, winner: first }\n        }\n    }\n\n    return {isEnd: false}\n}\n\nconst endOfGameCombinations = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 4, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n]\n"],"mappings":"AAEA,OAAO,MAAMA,kBAAkB,GAAIC,OAAsB,IAAK;EAC1D,KAAK,MAAMC,WAAW,IAAIC,qBAAqB,EAAE;IAC7C,MAAMC,KAAK,GAAGH,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IACrC,MAAMG,MAAM,GAAGJ,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IACtC,MAAMI,KAAK,GAAGL,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;IAErC,MAAMK,QAAQ,GAAGH,KAAK,IAAIC,MAAM,IAAIC,KAAK;IACzC,MAAME,UAAU,GAAGJ,KAAK,KAAKC,MAAM,IAAIA,MAAM,KAAKC,KAAK;IAEvD,IAAIC,QAAQ,IAAIC,UAAU,EAAE;MACxB,OAAO;QAAEC,KAAK,EAAE,IAAI;QAAEC,MAAM,EAAEN;MAAM,CAAC;IACzC;EACJ;EAEA,OAAO;IAACK,KAAK,EAAE;EAAK,CAAC;AACzB,CAAC;AAED,MAAMN,qBAAqB,GAAG,CAC1B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}